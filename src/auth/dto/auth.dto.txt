import { IsEmail, IsString, MinLength } from 'class-validator';
// Импорт декораторов из библиотеки `class-validator` для проверки входных данных.

export class AuthDto {
  /**
   * Адрес электронной почты пользователя.
   * @example "user@example.com"
   */
  @IsEmail()
  // Проверяет, что значение является валидным email-адресом.
  email: string;

  /**
   * Пароль пользователя.
   * @description Пароль должен быть строкой длиной не менее 6 символов.
   * @example "password123"
   */
  @MinLength(6, {
    message: 'Password must be at least 6 characters long',
  })
  // Устанавливает минимальную длину строки (не менее 6 символов) и кастомное сообщение при ошибке валидации.
  @IsString()
  // Проверяет, что значение является строкой.
  password: string;
}

Подробное описание для документации (JSDoc):
AuthDto:
DTO (Data Transfer Object), используемый для передачи данных аутентификации. Этот класс содержит два обязательных поля:

email: Адрес электронной почты пользователя.
password: Пароль пользователя.
Поля:
    email:

    Тип: string.
Проверки:
    Декоратор @IsEmail(): Убедится, что значение является корректным email-адресом.
Пример:

    {       

    "email": "user@example.com"
    }
password:

Тип: string.
Проверки:
    Декоратор @IsString(): Проверяет, что значение является строкой.
    Декоратор @MinLength(6): Устанавливает минимальную длину строки в 6 символов.
    Кастомное сообщение: Если пароль короче 6 символов, будет возвращено сообщение: Password must be at least 6 characters long.
Пример:

{
  "password": "password123"
}

Итог:
Комментарии: 
    Добавлены для каждого поля, чтобы было понятно, зачем используется конкретный декоратор.
JSDoc:
    Предоставляет структурированное описание DTO для разработчиков.
Сообщения об ошибках:
     Включено кастомное сообщение для длины пароля.
